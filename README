                    YUCON - A general-purpose unit converter
                    ----------------------------------------

Copyright (C) 2016-2017 Blaine Murphy
This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.


********************************************************************************
                               INTRODUCTION
********************************************************************************

Yucon is a dedicated feature-rich unit conversion utility built especially for
use on the command line. It was designed with three things in mind:
  1. Empower the user. Make the program as intuitive as possible and provide a
     broad feature set.

  2. Modular design. Yucon is designed to be easily extensible. For instance,
     units are loaded procedurally from a file rather than being built into the
     program.

  3. Freedom. Yucon is free and open source to make it as useful as possible.

These are some of the features that Yucon (currently) supports:
  -  Direct conversion of units on the command line:
     Ex. $ yucon 25.4 mm in
         Converts 25.4 millimeters to inches. Output: '1'
  
  -  Interactive terminal mode
  
  -  Batch conversion from files

More features are planned in future releases. Yucon is still in a Beta stage.
Planned features include additional formatting options, porting of the features
of interactive mode to batch mode, and a GUI front end.

Yucon officially supports the following environments:
  -  Linux
  -  Windows


********************************************************************************
                             1 - INSTALLATION
********************************************************************************

To install, follow the instructions below.

For Linux users:
    1. Download the 'yucon_v[version#].zip' file from the Releases page:
         https://github.com/kmBlaine/yucon/releases/
         
       (replace [version#] with whatever the version number you donwloaded is.
        Ex. Version = 0.2.14 --> yucon_v0.2.14.zip)

    2. Open up a terminal session, unzip the files, and 'cd' into the
       'yucon_v[version#]' folder.
         $ cd /path/to/yucon_v[version#].zip
         $ unzip yucon_v[version#].zip
         $ cd yucon_v[version#]

    3. Set the execute permission on the installer script.
         $ chmod 755 install-linux.sh

    4. Run 'install-linux.sh' with root privelege:
         $ sudo ./install-linux.sh
         OR
         $ su
         # ./install-linux.sh

    5. Your finished! Type 'yucon' in your terminal to start using.

For Windows users:
    1. Download the 'yucon_v[version#].zip' file from the Releases page:
         https://github.com/kmBlaine/yucon/releases/
         
       (replace [version#] with whatever the version number you donwloaded is.
        Ex. Version = 0.2.14 --> yucon_v0.2.14.zip)
    
    2. Navigate to the download location. Unzip the files and open the 
       'yucon_v[version#]' folder.

    3. Create a folder for Yucon in your preferred location. Suggestions:
         C:\Program Files\yucon\
         C:\Users\[your username]\Desktop\yucon\
         C:\Users\[your username]\yucon\

    4. Copy the 'yucon-windows.exe' file in the 'yucon_v[version#]' folder into
       the folder you just created.

    5. Rename 'yucon-windows.exe' to 'yucon.exe'

    6. Copy the 'units.cfg' file in the 'yucon_v[version#]' folder into the same
       folder as yucon.exe.

    7. Your finished! Simply double-click 'yucon.exe' to start using.
       
       OR
       
       Open a command prompt (START + R, type 'cmd', hit ENTER) and cd to where
       you copied Yucon to:
         > cd path\to\yucon\

       Type 'yucon' to start using.
         > yucon


********************************************************************************
                                  2 - USAGE
********************************************************************************

The following are instructions on how to use Yucon. These are intended as
BASIC INSRUCTIONS and do not comprise the full documentation and usage of
Yucon.

Yucon allows you perform conversions on the command line invoking the program.
  
  Ex. $ yucon 25.4 mm in
      Converts 25.4 millimters to inches. Output: '1 in'

  Ex. $ yucon -s 60 mph kmph
      Converts 60 miles/hr to kilometers/hr. Output '96.5606'
      Note the '-s' option excludes the output unit and prints just a number

Yucon allows you to enter an interactive mode where you can keep entering
conversion without needing to invoke 'yucon' or any of the formatting options.
In Windows, this is the mode that is launched when the program simply double
clicked. 
  
  Ex. $ yucon -v
      Enters an interactive session with the 'verbose' formatting option. User
      will initially see this:
      
        YUCON - General Purpose Unit Converter - v[version#]
        Type 'help' for assistance.

        > 
      
      You may now simply type your conversions at will. Type 'exit' to close the
      session:
        
        YUCON - General Purpose Unit Converter - v[version#]
        Type 'help' for assistance.

        > 3.78 l gal
        3.78 l = 0.99857 gal

        > 967 _ug g
        967 ug = 0.000967 g

        > exit
        
      Note the '-v' echoes the original value and unit as well as the converted
      value and unit. Also note the underscore before 'ug'. Underscores cause
      the next letter to be interpretted as a standard metrix prefix, in this
      case 'micro' (1e-6). This allows any unit to be prefixed even if its
      prefixed version is not included in 'units.dat'. (For convenience, the
      most common prefixed versions of the base units are included like cm, ml,
      and mg)
      
Yucon allows you to do a batch of conversions listed in a text file. This mode
is invoked with the '-b' option. The basic rules are: one conversion per line;
blank/gibberish lines and invalid conversions are skipped without notice; the
last argument given is interpeted as the file name and path of the input file.
  
  Ex. Given the following input file on the user's desktop (Windows system):

        455 cid cc
        340 lbft Nm
        this will not be converted
        15 F C
        707 hp kW
        
      > yucon -d -b -o C:\output.txt C:\Users\John Doe\Desktop\input.txt
      
      Converts all valid conversions in 'C:\Users\John Doe\Desktop\input.txt'
      and prints them to the console AND an output file on the root of the C:
      drive. Console output and contents of 'C:\output.txt':
      
        7456.11 cc
        460.978 Nm
        -9.44444 C
        527.21 kW
        
      Note the '-o' option tells Yucon to write its outputs into a file as well
      as print them to the console. The argument IMMEDIATELY FOLLOWING '-o' will
      be interpreted as the file name and path.

OTHER NOTES:
  -  When using interactive mode, the last number and unit used may be recalled
     with the ':' character:

       > 56 in mm
       1422.4 mm

       > : : cm
       142.24 cm

  -  Yucon supports all standard metric prefixes with the use of the '_'
     character. For instance '_kN' denotes 'kilonewton'. ONE EXCEPTION! 'Deca'
     is NOT 'da'; it is 'D'. (For convenience, the commonly-used prefixed
     versions of the base units are included in 'units.dat' like cm, ml, and mg)
  
  -  Yucon allows modification and viewing of certain variables when Interactive
     mode using the 'set' and 'view' commands respectively:
  
       > set format v
       
       Changes output format to 'verbose' mode
       
       > view input_unit
       mmHg
       
       Prints the last valid input unit or "[not set]" if none exists.
       
     Valid program variables include:
       format
       value
       input_unit
       output_unit
  
  -  Yucon supports piping of input with the '-b' option in Linux:
     $ cat input.txt | yucon -b
     
  -  Formatting options may be added to a Windows shortcut by specifying them
     in the shortcut properties, specifically in the 'Target' field under the
     'Shortcut' tab:
     
       Ex. Target: "C:\path\to\yucon\yucon.exe" -v
     
  -  If you wish to add more units to the program, you can do so by editing
     'units.cfg' in any text editor. Units are specified in the following
     format:
       
       names=[comma separated list of names]
       type=[unit type]
       factor=[unit's value in base units]
       offset=[offset from a common reference point. Zero in most cases]
       
     Ex. (to add micrograms to the program)
       
       names=microgram,ug
       type=length
       factor=1e-6
       offset=0
 
     
********************************************************************************
                               3 - CHANGELOG
********************************************************************************

v0.1.1 - Released 22 Apr 2017
-------------------------------------------------
  - Incremental feature update
  - Changes:
    - Default output format is now 'descriptive' (-d)
    - Help messages revamped to deliver more informative error messages
  - Additions:
    - Option for simple output format: -s
    - Partial support for fuel economy; calculable in units with dimension of
        [volume/distance] such as L/100km or gal/mi. IMPORTANT: FUEL ECONOMIES
        IN DIMENSION [distance/volume] SUCH AS MPG ARE NOT YET SUPPORTED! (sorry
        U.S.)
    - 'set' and 'view' commands in Interactive mode which allow setting and
      viewing of certain program variables like output format or recall units
      dynamically.

v0.1 - Released 12 Dec 2016
-------------------------------------------------
  - Initial Beta release
  - Base feature set implemented:
    - Direct conversion of units on the command line
    - Batch conversion of units from file or pipe
    - Interactive mode for converting units
    - Loads all units from units.dat file
    - Support for following unit types: length, volume, area, energy, power,
        mass, force, torque, speed, pressure, temperature
    - Support for metric prefixing
    - Support for recall when using batch and interactive mode

