################################################################################
#                                                                              #
# UNITS.CFG - yucon - v0.2                                                     #
#                                                                              #
################################################################################ 
#
# This file contains the unit declarations for Yucon, including both default and
# user defined-units. Units may be added to this file to extend the capabilities
# of yucon though THE DEFAULT UNITS SHOULD NOT BE EDITED!*
#
#
#
# FORMATTING EXPECTATIONS:
#
################################################################################ 
# 
# This file is essentially an INI file. Yucon follows those expectations pretty
# closely. But just to clarify, they are as follows:
# 
# 1. Anything following a '#' is a comment. This may be escaped with a '\'
#    Ex. When declaring a unit name:
#      
#      aliases=some\#unit     # this creates unit with the alias 'some#unit'
# 
# 2. Whitespace apart from newline ('\n'; 0x0A) is not significant, and may be
#    used unescpaed for liberal formatting. Blank lines will be ignored.
#
# 3. MSDOS / Windows style line endings (CR,LF; '\r\n', 0x0A0B) have no effect
#    on Yucon's behavior while reading this file. Use whatever text editor you
#    perfer.**
#
# 4. This file IS CASE SENSITIVE!
#
#
#
# TO DECLARE A NEW UNIT:
#
################################################################################
# 
# Though its location has no real effect, it is recommended you keep any custom
# units in the 'USER-DEFINED' section for clarity's sake. And so you don't
# accidentally corrupt the default units.
# 
# 1. Enclose the unit's common name in square brackets:
#
#      [ miles per hour ]
#
#    This tells Yucon we are defining a new unit. Leading and trailing
#    whitespace inside [] are removed. Enclosed whitespace is kept
#    
#      [  miles per hour    ]   --> Common Name: 'miles per hour'
# 
# 2. List the unit's type and its value in the common base unit*** of that type.
#
#      type = speed
#      conv_factor = 44.704
#
#    This tells Yucon we now have a unit called:
#      
#      'miles per hour'
#    
#    which classified as a 'speed' and where:
#
#       1 mile per hour = 44.704 centimeters per second
#        
#    The base units and supported types are as follows:****
#
#      length       : millimeter
#      volume       : milliliter
#      area         : square centimeter
#      energy       : joule
#      power        : watt
#      mass         : gram
#      force        : newton
#      torque       : newton meter
#      speed        : centimeters per second
#      pressure     : pascals
#      temperature  : kelvin
#      fueleconomy  : liters per 100 kilometers
#
# 3. List the additional properties of the unit if any. These are not mandatory
#    and may be ommitted. Additional properties tell Yucon certain details of
#    how to handle the unit or make it more ergonomic to use. Optional
#    properties are as follows:
#      
#      aliases      : additional names for the unit, typically abbreviations
#                     Comma separated. Commas may be escaped with backslash '\'
#                     Enclosed whitespace is kept. Leading and trailing is not
#                     Ex. aliases = mph, mi/hr
#                         Now callable by 'mph' or 'mi/hr'
#                     - Default: (none)
#
#      zero_point   : defines where zero is for this unit on the base unit's
#                     scale. this is typically only used for temperatures where
#                     the definition of zero is not concrete
#                     - Default: 0
#
#      dimensions   : defines how many dimensions this unit has. typically used
#                     for areas or volumes where Yucon's metric prefixing would
#                     otherwise behave unexpectedly and would scale the unit
#                     proportionally instead of exponentially
#                     - Default: 1
#
#      tags         : tags for more search specificity. allows disambiguation
#                     of units that share names.
#                     Acceptable tags: si,uk,us
#                     - Defaults: (none)
#
#      inverse      : indicates that this unit is the inverse of its base unit
#                     boolean field. indicates inverse if present.
#                     Ex. miles per gallon (MPG) is inverse of L/100km which
#                         requires special consideration
#                     - Default: (NOT inverse)
#
#
#
# NOTES:
#
# * 
#   Even though there should be no reason to, you are allowed to edit the
#   defaults. In keeping with Yucon's design principles, it is intended to be
#   ergonomic, not idiot-proof.
# 
# **
#   Despite DOS / Windows style line endings being insignificant, it is frowned
#   upon if you use notepad.exe. Get yourself a real editor like Notepad++ or
#   Atom ;) --Blaine Murphy
#
# ***
#   This is how Yucon can convert blindly. If we know that an inch is 25.4 mm
#   and a meter is 1000 mm, converting between them is just setting up a fixed
#   ratio.
# 
# **** 
#   The default base units are naturally SI, but they are not necessarily in
#   keeping with either canonical SI bases or Centimeter Gram Second convention.
#   Sparing the long boring explanation, the base units for Yucon were chosen
#   to maintain the best numerical precision for most typical unit conversions.
#

################################################################################
#                                                                              #
# USER-DEFINED UNITS:                                                          #
# - It is recommended that you put any custom units here                       #
#                                                                              #
################################################################################

# [new unit]
# type = length
# aliases = alias1, alias2
# conv_factor = 1

################################################################################
#                                                                              #
# DEFAULT UNITS:                                                               #
# - DO NOT EDIT!                                                               #
#                                                                              #
################################################################################

[inch]
	aliases     = in
	type        = length
	conv_factor = 25.4
#	tags        = us,uk

[foot]
	aliases     = ft
	type        = length
	conv_factor = 304.8
#	tags        = us,uk

[yard]
	aliases     = yd
	type        = length
	conv_factor = 914.4
#	tags        = us,uk

[mile]
	aliases     = mi
	type        = length
	conv_factor = 1609344
#	tags        = us,uk

[nautical mile]
	aliases     = nmi
	type        = length
    conv_factor = 1852000
#	tags        = us,uk

[millimetre]
	aliases     = millimeter, mm
	type        = length
	conv_factor = 1
#	tags        = si

[centimetre]
	aliases     = centimeter, cm
	type        = length
	conv_factor = 10
#	tags        = si

[metre]
	aliases     = meter, m
	type        = length
	conv_factor = 1000
#	tags        = si

[kilometre]
	aliases     = kilometer, km
	type        = length
	conv_factor = 1000000
#	tags        = si

[teaspoon]
	aliases     = tsp
	type        = volume
	conv_factor = 4.92892159375
#	tags        = us,uk

[tablespoon]
	aliases     = tbsp
	type        = volume
	conv_factor = 14.78676478125
#	tags        = us,uk

[fluid ounce] # US fluid ounce
	aliases     = fl-oz, floz, fl oz
	type        = volume
	conv_factor = 29.5735295625
#	tags        = us

#[fluid ounce] # UK fluid ounce
#	aliases     = fl-oz, floz, fl oz
#	type        = volume
#	conv_factor = 28.4130625
#	tags        = uk

[cup] # US cup
	aliases     = cp
	type        = volume
	conv_factor = 236.5882365
#	tags        = us

#[cup] # UK cup
#	aliases     = cp
#	type        = volume
#	conv_factor = 284.130625
#	tags        = uk

[pint] # US pint
	aliases     = pt
	type        = volume
	conv_factor = 473.176473
#	tags        = us

[quart] # US quart
	aliases     = qt
	type        = volume
	conv_factor = 946.352946
#	tags        = us

[gallon] # US gallon
	aliases     = gal
	type        = volume
	conv_factor = 3785.411784
#	tags        = us

[cubic inch]
	aliases     = in3, ci, cid, cu-in
	type        = volume
	conv_factor = 16.387064
	dimensions  = 3
#	tags        = us,uk

[cubic foot]
	aliases     = cu-ft, ft3
	type        = volume
	conv_factor = 28316.846592
	dimensions  = 3
#	tags        = us,uk
	
[cubic yard]
	aliases     = cu-yd,yd3
	type        = volume
	conv_factor = 764554.857984
	dimensions  = 3
#	tags        = us,uk

[millilitre]
	aliases     = milliliter,ml,mL
	type        = volume
	conv_factor = 1
#	tags        = si

[cubic centimetre]
	aliases     = cubic centimeter,cm3,cc
	type        = volume
	conv_factor = 1
	dimensions  = 3
#	tags        = si

[litre]
	aliases     = liter,l,L
	type        = volume
	conv_factor = 1000
#	tags        = si

[cubic metre]
	aliases     = cubic meter,m3
	type        = volume
	conv_factor = 1000000
	dimensions  = 3
#	tags        = si

[square inch]
	aliases     = sq-in,in2
	type        = area
	conv_factor = 6.4516
	dimensions  = 2
#	tags        = us,uk

[square foot]
	aliases     = sq-ft,ft2
	type        = area
	conv_factor = 929.0304
	dimensions  = 2
#	tags        = us,uk

[square yard]
	aliases     = sq-yd,yd2
	type        = area
	conv_factor = 8361.2736
	dimensions  = 2
#	tags        = us,uk

[square mile]
	aliases     = sq-mi,mi2
	type        = area
	conv_factor = 10196803584
	dimensions  = 2
#	tags        = us,uk

[acre]
	aliases     = acre
	type        = area
	conv_factor = 281031.696
	dimensions  = 1
#	tags        = us

[square millimetre]
	aliases     = square millimeter,mm2
	type        = area
	conv_factor = 0.01
	dimensions  = 2
#	tags        = si

[square centimetre]
	aliases     = square centimeter,cm2
	type        = area
	conv_factor = 1
	dimensions  = 2
#	tags        = si

[square metre]
	aliases     = square meter,m2
	type        = area
	conv_factor = 10000
	dimensions  = 2
#	tags        = si

[square kilometre]
	aliases     = square kilometer,km2
	type        = area
	conv_factor = 10000000000
	dimensions  = 2
#	tags        = si

[joule]
	aliases     = J,j
	type        = energy
	conv_factor = 1
	dimensions  = 2
#	tags        = si

[electron volt]
	aliases     = eV,ev
	type        = energy
	conv_factor = 1.602176565E-19
#	tags        = si

[kilowatt hour]
	aliases     = kWh,kwh
	type        = energy
	conv_factor = 3600000
#	tags        = si

[british thermal unit]
	aliases     = btu,BTU
	type        = energy
	conv_factor = 1055.05585262
#	tags        = si

[calorie] # thermochemical
	aliases     = cal
	type        = energy
	conv_factor = 4.184
#	tags        = us

[kilocalorie] # (FOOD CALORIE)
	aliases     = food calorie, kcal
	type        = energy
	conv_factor = 4184
#	tags        = us

[watt]
	aliases     = W,w
	type        = power
	conv_factor = 1
#	tags        = si

[kilowatt]
	aliases     = kW,kw
	type        = power
	conv_factor = 1000
#	tags        = si

[horsepower] # mechanical
	aliases     = hp
	type        = power
	conv_factor = 745.7
#	tags        = us

[metric horsepower]
	aliases     = ps
	type        = power
	conv_factor = 735.49875
#	tags        = si

[ounce] # (AVOIRDUPOIS)
aliases=oz
type=mass
conv_factor=28.349523125
#tags=us,uk

[grain] # (AVOIRDUPOIS)
aliases=grain,gr
type=mass
conv_factor=64.79891E-3
#tags=us,uk

[pound mass] # (AVOIRDUPOIS)
aliases=pound,lb,lbm
type=mass
conv_factor=453.59237
#tags=us,uk

[ton] # (US SHORT TON)
aliases=short ton
type=mass
conv_factor=907184.74
#tags=us

[long ton]
type=mass
conv_factor=1016046.9088
#tags=us

[milligram]
aliases=milligramme,mg
type=mass
conv_factor=0.001
#tags=us

[gram]
aliases=gramme,g
type=mass
conv_factor=1
#tags=si

[kilogram]
aliases=kilogram,kg
type=mass
conv_factor=1000
#tags=si

[tonne] # (METRIC TON)
aliases=metric ton
type=mass
conv_factor=1000000
#tags=si

[pound force]
aliases=lbf
type=force
conv_factor=4.4482216152605
#tags=us

[newton]
aliases=N
type=force
conv_factor=1
#tags=si

[kilogram force]
aliases=kilogramme force,kgf
type=force
conv_factor=9.80665
#tags=si

[pound foot] #(TORQUE)
aliases=lbft,lb-ft
type=torque
conv_factor=1.35581795
#tags=us,uk

[newton metre]
aliases=newton meter,Nm,N-m
type=torque
conv_factor=1
#tags=us,uk

[feet per second]
aliases=ftps,ft/s
type=speed
conv_factor=30.48
#tags=us,uk

[miles per hour]
aliases=mph,mi/hr
type=speed
conv_factor=44.704
#tags=us,uk

[knots]
aliases=knot,kn
type=speed
conv_factor=51.4444444444444
#tags=us,uk

[metres per second]
aliases=meters per second,m/s
type=speed
conv_factor=100
#tags=si

[kilometres per hour]
aliases=kilometers per hour,km/hr,kmph
type=speed
conv_factor=27.7777777777778
#tags=si

[pounds per square inch]
aliases=psi
type=pressure
conv_factor=6894.757
#tags=us,uk

[millimetres of mercury]
aliases=millimeters of mercury,mmHg
type=pressure
conv_factor=133.322387415
#tags=si

[bar]
type=pressure
conv_factor=100000
#tags=si

[pascal]
aliases=Pa,pa
type=pressure
conv_factor=1
#tags=si

[kilopascal]
aliases=kpa,kPa
type=pressure
conv_factor=1000
#tags=si

[atmosphere]
aliases=atm
type=pressure
conv_factor=101325
#tags=si

[celcius]
aliases=C
type=temperature
conv_factor=1
zero_point=273.15
#tags=si

[fahrenheit]
aliases=F
type=temperature
conv_factor=0.555555555555556
zero_point=255.372222222222222
#tags=us,uk

[kelvin]
aliases=K
type=temperature
conv_factor=1
#tags=si

[rankine]
aliases=R,Ra
type=temperature
conv_factor=0.555555555555556
#tags=us,uk

[litres per 100 kilometres]
aliases=liters per 100 kilometers,L/100km,l/100km
type=fuel economy
conv_factor=1
#tags=si

[litres per kilometre]
aliases=liters per kilometer,L/km,l/km
type=fuel economy
conv_factor=100
#tags=si

[miles per gallon] # US MPG
aliases=mpg,mi/gal
type=fuel economy
conv_factor=235.214583333
inverse=1
#tags=us
